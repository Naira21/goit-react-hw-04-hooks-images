{"version":3,"sources":["components/Searchbar.js","services/pixabay.js","components/ImageGalleryItem.js","components/Button.js","components/Loader.js","components/Modal.js","components/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","searchValue","setSearchValue","className","e","preventDefault","type","autoComplete","autoFocus","value","placeholder","onChange","target","PixabayFetch","API_KEY","BASE_URL","this","_searchQuery","_page","perPage","imageType","imageOrient","a","axios","defaults","baseURL","console","log","searchQuery","page","url","get","result","data","hits","message","ImageGalleryItem","pictUrl","photographer","onClick","largImg","src","alt","Button","results","length","LoaderComponent","color","height","width","timeout","Modal","largePic","useEffect","window","addEventListener","handleEscape","removeEventListener","code","createPortal","currentTarget","document","getElementById","newPixabayFetch","ImageGallery","searchResults","setSearchResults","showModal","setShowModal","status","setStatus","setLargImg","setPhotographer","resetPage","searchPhotos","then","scrolling","catch","scrollTo","top","documentElement","scrollHeight","behavior","openModal","dataset","source","map","picture","webformatURL","user","largeImageURL","id","prev","alert","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3569a41a.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\n\nfunction Searchbar({ onSubmit }) {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleSearchOnChange = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(searchValue);\n    setSearchValue(\"\");\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSearchSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={searchValue}\n          placeholder=\"Search images and photos\"\n          onChange={handleSearchOnChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nexport default Searchbar;\n","import axios from \"axios\";\n\n//OOP\nexport class PixabayFetch {\n  constructor(API_KEY, BASE_URL) {\n    this.BASE_URL = BASE_URL;\n    this.API_KEY = API_KEY;\n    this._searchQuery = \"\"; //имя свойства, с которым работает геттер и сеттер (их имена одинаковые), должно отличаться. Для этого используем паттерн — нижнее подчеркивание\n    this._page = 1;\n    this.perPage = 12;\n    this.imageType = \"photo\";\n    this.imageOrient = \"horizontal\";\n  }\n  //так как мы передаем пустое значение для searchQuery, то необходимо ввести для них геттер ии сеттер\n  get searchQuery() {\n    return this._searchQuery;\n  }\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    return (this._page += value);\n  }\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  async searchPhotos() {\n    axios.defaults.baseURL = this.BASE_URL;\n    console.log(\"searchQ:\", this.searchQuery, \"page:\", this.page);\n    let url = `?q=${this.searchQuery}&page=${this.page}&key=${this.API_KEY}&image_type=${this.imageType}&orientation=${this.imageOrient}&per_page=${this.perPage}`;\n\n    try {\n      const result = await axios.get(url);\n      const data = result.data.hits;\n      return data;\n    } catch (err) {\n      return err.message;\n    }\n  }\n}\n","import \"./styles.css\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ pictUrl, photographer, onClick, largImg }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={pictUrl}\n        alt={photographer}\n        className=\"ImageGalleryItem-image\"\n        onClick={onClick}\n        data-source={largImg}\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  pictUrl: PropTypes.string,\n  photographer: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import \"./styles.css\";\n\nexport default function Button({ onClick, results }) {\n  return (\n    results.length > 11 && (\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    )\n  );\n}\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nexport default function LoaderComponent() {\n  return (\n    <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} timeout={3000} />\n  );\n}\n","// import { Component } from \"react\";\nimport { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport \"./styles.css\";\n\nfunction Modal({ largePic, alt, onClick }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleEscape);\n    return () => {\n      window.removeEventListener(\"keydown\", handleEscape);\n    };\n  });\n\n  const handleEscape = (e) => {\n    if (e.code === \"Escape\") {\n      onClick();\n    }\n  };\n\n  const handleClose = (e) => {\n    if (e.currentTarget === e.target) {\n      onClick();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleClose}>\n      <div className=\"Modal\">\n        <img src={largePic} alt={alt} />\n      </div>\n    </div>,\n    document.getElementById(\"modalRoot\")\n  );\n}\n\nexport default Modal;\n\n// export class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener(\"keydown\", this.handleEscape);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener(\"keydown\", this.handleEscape);\n//   }\n\n//   handleEscape = (e) => {\n//     if (e.code === \"Escape\") {\n//       this.props.onClick();\n//     }\n//   };\n\n//   handleClose = (e) => {\n//     if (e.currentTarget === e.target) {\n//       this.props.onClick();\n//     }\n//   };\n\n//   render() {\n//     return createPortal(\n//       <div className=\"Overlay\" onClick={this.handleClose}>\n//         <div className=\"Modal\">\n//           <img src={this.props.largePic} alt=\"\" />\n//         </div>\n//       </div>,\n//       document.getElementById(\"modalRoot\")\n//     );\n//   }\n// }\n","import \"./styles.css\";\nimport { useState, useEffect } from \"react\";\nimport { PixabayFetch } from \"../services/pixabay\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\nimport Button from \"./Button\";\nimport LoaderComponent from \"./Loader\";\nimport Modal from \"./Modal\";\n\n//для запроса\nconst API_KEY = `23235889-ad2e782c3a775466fc04cd861`;\nconst BASE_URL = `https://pixabay.com/api/`;\nconst newPixabayFetch = new PixabayFetch(API_KEY, BASE_URL);\n\nexport default function ImageGallery({ searchValue }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [status, setStatus] = useState(\"init\");\n  const [largImg, setLargImg] = useState(\"\");\n  const [photographer, setPhotographer] = useState(null);\n\n  useEffect(() => {\n    setStatus(\"pending\");\n    newPixabayFetch.searchQuery = searchValue;\n    newPixabayFetch.resetPage();\n    newPixabayFetch\n      .searchPhotos()\n      .then((searchResults) => {\n        console.log(searchResults);\n        setSearchResults(searchResults);\n        setStatus(\"success\");\n        scrolling();\n      })\n      .catch(() => {\n        setStatus(\"error\");\n      });\n  }, [searchValue]);\n\n  const scrolling = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const handleClick = () => {\n    newPixabayFetch.page = 1;\n    console.log(\"page\", newPixabayFetch.page);\n    newPixabayFetch\n      .searchPhotos()\n      .then((searchResults) => {\n        setSearchResults((prev) => [...prev, ...searchResults]);\n        setStatus(\"success\");\n        scrolling();\n      })\n      .catch(() => {\n        setStatus(\"error\");\n      });\n  };\n\n  const openModal = (e) => {\n    setShowModal(true);\n    setLargImg(e.target.dataset.source);\n    setPhotographer(e.target.alt);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  if (status === \"init\") {\n    return null;\n  }\n  if (status === \"pending\") {\n    return <LoaderComponent />;\n  }\n  if (status === \"success\") {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {searchResults.length > 0 &&\n            searchResults.map((picture) => {\n              return (\n                <ImageGalleryItem\n                  key={picture.id}\n                  onClick={openModal}\n                  pictUrl={picture.webformatURL}\n                  photographer={picture.user}\n                  largImg={picture.largeImageURL}\n                />\n              );\n            })}\n          {showModal && (\n            <Modal onClick={closeModal} largePic={largImg} alt={photographer} />\n          )}\n        </ul>\n        <Button type=\"button\" onClick={handleClick} results={searchResults} />\n      </>\n    );\n  }\n  if (status === \"error\") {\n    if (searchResults.length === 0) {\n      return alert(`Sorry, we have not find such word... Lets try again!`);\n    }\n  }\n\n  // state = {\n  //   searchResults: [],\n  //   showModal: false,\n  //   status: \"init\",\n  //   largImg: \"\",\n  //   photographer:'',\n  // };\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.searchValue !== this.props.searchValue) {\n  //     console.log(`get fetch`);\n  //     this.setState({ status: \"pending\" });\n  //     newPixabayFetch.resetPage();\n  //     newPixabayFetch.searchQuery = this.props.searchValue; //так как мы обращаемся к сеттеру, то значение мы просто перезаписываем (а не вызываем)\n  //     newPixabayFetch\n  //       .searchPhotos() //сетим значение из searchValue, чтобы вызвать метод searchPhotos\n  //       .then((searchResults) => {\n  //         console.log(searchResults);\n  //         this.setState({ searchResults, status: \"success\" });\n  //         this.scrolling();\n  //       })\n  //       .catch(() => {\n  //         this.setState({ status: \"error\" });\n  //       });\n  //   }\n  // }\n\n  // handleClick = () => {\n  //   newPixabayFetch.page = 1;\n  //   console.log(\"page\", newPixabayFetch.page);\n  //   newPixabayFetch\n  //     .searchPhotos()\n  //     .then((searchResults) => {\n  //       this.setState((prev) => ({\n  //         searchResults: [...prev.searchResults, ...searchResults],\n  //         status: \"success\",\n  //       }));\n  //       this.scrolling();\n  //     })\n  //     .catch(() => {\n  //       this.setState({ status: \"error\" });\n  //     });\n  // };\n\n  // scrolling = () => {\n  //   window.scrollTo({\n  //     top: document.documentElement.scrollHeight,\n  //     behavior: \"smooth\",\n  //   });\n  // };\n\n  // closeModal = () => {\n  //   this.setState({ showModal: false });\n  // };\n\n  // openModal = (e) => {\n  //   this.setState({\n  //     showModal: true,\n  //     largImg: e.target.dataset.source,\n  //     photographer: e.target.alt,\n  //   });\n  // };\n\n  // render() {\n  //   const { searchResults, status, showModal } = this.state;\n  //   const { closeModal, handleClick, openModal } = this;\n  //   if (status === \"init\") {\n  //     return null;\n  //   }\n  //   if (status === \"pending\") {\n  //     return <LoaderComponent />;\n  //   }\n  //   if (status === \"success\") {\n  //     return (\n  //       <>\n  //         <ul className=\"ImageGallery\">\n  //           {searchResults.length > 0 &&\n  //             searchResults.map((picture) => {\n  //               return (\n  //                 <ImageGalleryItem\n  //                   key={picture.id}\n  //                   onClick={openModal}\n  //                   pictUrl={picture.webformatURL}\n  //                   photographer={picture.user}\n  //                   largImg={picture.largeImageURL}\n  //                 />\n  //               );\n  //             })}\n  //           {showModal && (\n  //             <Modal onClick={closeModal} largePic={this.state.largImg} alt={this.state.photographer }/>\n  //           )}\n  //         </ul>\n  //         <Button type=\"button\" onClick={handleClick} results={searchResults} />\n  //       </>\n  //     );\n  //   }\n  //   if (status === \"error\") {\n  //     if (searchResults.length === 0) {\n  //       return alert(\"Sorry, we have not find such word... Lets try again!\");\n  //     }\n  //   }\n  // }\n}\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\n\nfunction App() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  const getSearchValue = (searchValue) => {\n    setSearchValue(searchValue);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={getSearchValue} />\n      <ImageGallery searchValue={searchValue} page={page} />\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}